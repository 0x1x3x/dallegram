import { useState } from "react";
import { downloadImage } from "../utils";

import { BsTwitter } from "react-icons/bs";

const Post = ({ _id, prompt, photo, likes }) => {
  const [likeCount, setLikeCount] = useState(likes);
  const [isLiked, setIsLiked] = useState(() => {
    const likedPosts = JSON.parse(localStorage.getItem("likedPosts")) || [];
    return likedPosts.includes(_id);
  });

  const handleToggleLike = async () => {
    const newLikeCount = parseInt(likeCount) + (isLiked ? -1 : 1);

    try {
      const response = await fetch(
        `http://localhost:8080/api/v1/post/${_id}/like`,
        {
          method: "PUT",
          headers: {
            "Content-Type": "application/json",
          },
          body: JSON.stringify({ likes: newLikeCount }),
        }
      );
      if (!response.ok) {
        throw new Error(`HTTP error! status: ${response.status}`);
      }

      const result = await response.json();

      setIsLiked(!isLiked);
      setLikeCount(result.data.likes);

      const likedPosts = JSON.parse(localStorage.getItem("likedPosts")) || [];

      if (!isLiked) {
        likedPosts.push(_id);
      } else {
        const index = likedPosts.indexOf(_id);
        if (index > -1) {
          likedPosts.splice(index, 1);
        }
      }

      localStorage.setItem("likedPosts", JSON.stringify(likedPosts));
    } catch (error) {
      console.log(error);
    } finally {
      console.log("Likes updated successfully");
    }
  };

  const handleTweet = () => {
    const tweetUrl = `https://twitter.com/intent/tweet?text=This awesome image was generated by Dalle AI in @dallegram&hashtags=ai,dallegram`;
    window.open(tweetUrl, "_blank");
  };

  return (
    <div className="rounded-xl group relative mx-3 lg:mx-auto my-3 lg:w-[30%]">
      <img
        className="w-full h-auto object-cover rounded-xl"
        src={photo}
        alt={prompt}
      />
      <div className="group-hover:flex flex-col max-h-[94.5%] hidden absolute bottom-0 left-0 right-0 bg-[#10131f] m-2 p-4 rounded-md">
        <p className="text-white text-sm overflow-y-auto prompt">{prompt}</p>

        <div className="mt-5 flex justify-between items-center gap-2">
          <div className="flex items-center gap-2">
            <img
              className="flex justify-center items-center text-white text-xs font-bold cursor-pointer"
              onClick={handleToggleLike}
              width={28}
              height={28}
              src={
                isLiked
                  ? "../src/assets/liked.svg"
                  : "../src/assets/unliked.svg"
              }
              alt="Likes"
            />
            <div>
              <p className="text-sm font-medium">{likeCount}</p>
            </div>
          </div>
          <div className="flex items-center gap-4">
            <button
              type="button"
              onClick={() => downloadImage(_id, photo)}
              className="outline-none bg-transparent border-none"
            >
              <img
                src="../src/assets/download.png"
                alt="download"
                className="w-7 h-7 object-contain invert"
              />
            </button>
            <button
              type="button"
              onClick={handleTweet}
              className="text-white bg-[#1DA1F2] font-medium rounded-3xl sm:w-auto px-2 py-2 text-center poiter"
            >
              <BsTwitter className="w-4 h-4" />
            </button>
          </div>
        </div>
      </div>
    </div>
  );
};

export default Post;
